function varargout = sdfToTextExpList(sdfFilePath,varargin)
% SDFTOTEXTEXPLIST returns a list of CEL file names from a given .sdf file or writes that list ot file
%
% SDFTOTEXTEXPLIST takes a .sdf file as input.CEL file names are then extract from the .sdf file and 
% either returned as a cell array or written to file
%
% USAGE:
% List = sdfToTextExpList(sdfFilePath) reads the file in the path specified in sdfFilePath and returns
% a cell array list of CEL files to List
%
% sdfToTextExpList(sdfFilePath,'output',outputPath) reads the file in the path specified in sdfFilePath and 
% writes the list of CEL files to the file indicated in outputPath
%
% INPUT VARIABLE DEFINITIONS
% sdfFilePath: the path to the sdf file to be read
%
% OPTIONAL PARAMETERS
% 'output': the file path to which the produced lsit will be written
%
% OUTPUT VARIABLE DEFINITIONS
% List = a cell array of CEL file names
%
% Author: Corey Flynn, Broad Institute 2011

%parse optional arguments
pnames = {'output'};
dflts = {'none'};
args = parse_args(pnames,dflts,varargin{:});

%read in the sdf file
sdfData = parse_sdf(sdfFilePath);

%loop through the instance and vehicle entries in the returned structure and build a 1xN cell array,
%where N is the total number of CEL files for both instance and vehicle samples
CELNames = {};
for ii = 1:length(sdfData)
    for jj = 1:length(sdfData(ii).ins_cell_fname)
        currentName = sdfData(ii).ins_cell_fname(jj);
        CELNames = horzcat(CELNames,currentName);
    end
    for jj = 1:length(sdfData(ii).veh_cell_fname)
        currentName = sdfData(ii).veh_cell_fname(jj);
        CELNames = horzcat(CELNames,currentName);
    end
end

%either write to an output cell array or to file
if ~strcmp(args.output,'none')
    fid = fopen(args.output,'w');
    fprintf(fid,'List generated by sdfToTextExpList.m\n')
    for ii = 1:length(CELNames)
        fprintf(fid,[CELNames{ii} '\n']);
    end
    fclose(fid);
else
    varargout{1} = CELNames;
end